version: "3.7"

services:
  db:
    image: postgres:12.2-alpine
    container_name: ynoverflow_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ynoverflow-vol:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - "10000:5432"

  front:
    container_name: ynoverflow_front
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      PORT: ${FRONTEND_PORT}
      PUBLIC_API_URL: ${API_URL}
      PUBLIC_EXTERNAL_API_URL: ${EXTERNAL_API_URL}
    ports:
      - "10001:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/.svelte-kit:/app/.svelte-kit
      - ./frontend/static:/app/static
      - ./frontend/tailwind.config.cjs:/app/tailwind.config.cjs
      - ./.env:/app/.env

  back:
    container_name: ynoverflow_back
    build:
      context: backend
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./backend:/app
    ports:
      - "10002:3000"
    environment:
      PORT: ${BACKEND_PORT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_REGION: ${AWS_REGION}

volumes:
  ynoverflow-vol: